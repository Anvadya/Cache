$date
	Mon Nov  7 23:20:28 2022
$end
$version
	Icarus Verilog
$end
$timescale
	1s
$end
$scope module maintb $end
$var wire 8 ! outputdata_tb [7:0] $end
$var reg 1 " clk $end
$var reg 1 # isWrite_tb $end
$var reg 32 $ memoryAddress_tb [31:0] $end
$var reg 8 % writeValue_tb [7:0] $end
$var integer 32 & hitno [31:0] $end
$var integer 32 ' totalno [31:0] $end
$scope module c1 $end
$var wire 1 " clk $end
$var wire 1 # isWrite $end
$var wire 32 ( memoryAddress [31:0] $end
$var wire 8 ) outputdata [7:0] $end
$var wire 8 * outputmem [7:0] $end
$var wire 8 + writeValue [7:0] $end
$var reg 32 , Address [31:0] $end
$var reg 8 - Data [7:0] $end
$var reg 1 . ismemWrite $end
$var reg 8 / tempout [7:0] $end
$var integer 32 0 Associativity [31:0] $end
$var integer 32 1 Blocks [31:0] $end
$var integer 32 2 c [31:0] $end
$var integer 32 3 column [31:0] $end
$var reg 1 4 hitbit $end
$var integer 32 5 index [31:0] $end
$var integer 32 6 log [31:0] $end
$var integer 32 7 offset [31:0] $end
$var integer 32 8 r [31:0] $end
$var integer 32 9 tag [31:0] $end
$scope module m1 $end
$var wire 32 : Address [31:0] $end
$var wire 8 ; Data [7:0] $end
$var wire 1 . ismemWrite $end
$var wire 8 < outputmem [7:0] $end
$var wire 1 = outputdata $end
$var reg 8 > Address_last8bits [7:0] $end
$upscope $end
$scope begin $ivl_for_loop0 $end
$var integer 32 ? i [31:0] $end
$scope begin $ivl_for_loop1 $end
$var integer 32 @ j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop10 $end
$var integer 32 A i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop11 $end
$var integer 32 B i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop2 $end
$var integer 32 C i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop3 $end
$var integer 32 D i [31:0] $end
$upscope $end
$scope begin $ivl_for_loop4 $end
$var integer 32 E i [31:0] $end
$scope begin $ivl_for_loop5 $end
$var integer 32 F j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop6 $end
$var integer 32 G i [31:0] $end
$scope begin $ivl_for_loop7 $end
$var integer 32 H j [31:0] $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop8 $end
$var integer 32 I i [31:0] $end
$scope begin $ivl_for_loop9 $end
$var integer 32 J j [31:0] $end
$upscope $end
$upscope $end
$upscope $end
$scope begin $ivl_for_loop12 $end
$var integer 32 K i [31:0] $end
$upscope $end
$upscope $end
$enddefinitions $end
#0
$dumpvars
b0 K
bx J
bx I
bx H
bx G
bx F
bx E
bx D
bx C
bx B
bx A
b100 @
b1000 ?
b0 >
0=
bz <
b0 ;
b0 :
bx 9
b1000 8
bx 7
b10 6
bx 5
04
bx 3
b100 2
b100000 1
b100 0
bx /
0.
b0 -
b0 ,
b100 +
bz *
bx )
b101000 (
b0 '
b0 &
b100 %
b101000 $
0#
0"
bx !
$end
#10
b1 &
b1 '
b0 F
b100 E
b1 !
b1 )
b1 /
b1000 D
14
b100 C
b1 3
b1 9
b1 5
b0 7
b1 K
1"
#20
b10 K
0"
#30
b10 &
b10 '
b100 E
b1000 D
b100 C
b1 3
14
b11 K
1"
#40
b100 K
0"
#50
b11 &
b11 '
b100 E
b1000 D
b100 C
b1 3
14
b101 K
1"
#60
b110 K
0"
#70
b100 &
b100 '
b100 E
b1000 D
b100 C
b1 3
14
b111 K
1"
#80
b1000 K
0"
#90
b101 &
b101 '
b100 E
b1000 D
b100 C
b1 3
14
b1001 K
1"
#100
b1010 K
0"
#110
b110 &
b110 '
b100 E
b1000 D
b100 C
b1 3
14
b1011 K
1"
#120
b1100 K
0"
#130
b111 &
b111 '
b100 E
b1000 D
b100 C
b1 3
14
b1101 K
1"
#140
b1110 K
0"
#150
b1000 &
b1000 '
b100 E
b1000 D
b100 C
b1 3
14
b1111 K
1"
#160
b10000 K
0"
#170
b1001 &
b1001 '
b100 E
b1000 D
b100 C
b1 3
14
b10001 K
1"
#180
b10010 K
0"
#190
b1010 &
b1010 '
b100 E
b1000 D
b100 C
b1 3
14
b10011 K
1"
#200
b10100 K
0"
#210
b1011 &
b1011 '
b100 E
b1000 D
b100 C
b1 3
14
b10101 K
1"
#220
b10110 K
0"
#230
b1100 &
b1100 '
b100 E
b1000 D
b100 C
b1 3
14
b10111 K
1"
#240
b11000 K
0"
#250
b1101 &
b1101 '
b100 E
b1000 D
b100 C
b1 3
14
b11001 K
1"
#260
b11010 K
0"
#270
b1110 &
b1110 '
b100 E
b1000 D
b100 C
b1 3
14
b11011 K
1"
#280
b11100 K
0"
#290
b1111 &
b1111 '
b100 E
b1000 D
b100 C
b1 3
14
b11101 K
1"
#300
b11110 K
0"
#310
b10000 &
b10000 '
b100 E
b1000 D
b100 C
b1 3
14
b11111 K
1"
#320
b100000 K
0"
#330
b10001 &
b10001 '
b100 E
b1000 D
b100 C
b1 3
14
b100001 K
1"
#340
b100010 K
0"
#350
b10010 &
b10010 '
b100 E
b1000 D
b100 C
b1 3
14
b100011 K
1"
#360
b100100 K
0"
#370
b10011 &
b10011 '
b100 E
b1000 D
b100 C
b1 3
14
b100101 K
1"
#380
b100110 K
0"
#390
b10100 &
b10100 '
b100 E
b1000 D
b100 C
b1 3
14
b100111 K
1"
#400
b101000 K
0"
#410
b10101 &
b10101 '
b100 E
b1000 D
b100 C
b1 3
14
b101001 K
1"
#420
b101010 K
0"
#430
b10110 &
b10110 '
b100 E
b1000 D
b100 C
b1 3
14
b101011 K
1"
#440
b101100 K
0"
#450
b10111 &
b10111 '
b100 E
b1000 D
b100 C
b1 3
14
b101101 K
1"
#460
b101110 K
0"
#470
b11000 &
b11000 '
b100 E
b1000 D
b100 C
b1 3
14
b101111 K
1"
#480
b110000 K
0"
#490
b11001 &
b11001 '
b100 E
b1000 D
b100 C
b1 3
14
b110001 K
1"
#500
b110010 K
0"
